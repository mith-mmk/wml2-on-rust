
use crate::decoder::ccitt::HuffmanTree;

pub fn black_tree() -> HuffmanTree {
    let working_bits = 6;
    let max_bits = 13;
    let append_bits = 9;


    // 0000
    let append :[(i32,i32);512] = [
    //     EOL      0000_0000_0001 for ITU-T Rec. T.4
        (-1,-1),(-1,-1),(12,-2),(12,-2), (-1,-1),(-1,-1),(-1,-1),(-1,-1),
        (-1,-1),(-1,-1),(-1,-1),(-1,-1), (-1,-1),(-1,-1),(-1,-1),(-1,-1),
        (-1,-1),(-1,-1),(-1,-1),(-1,-1), (-1,-1),(-1,-1),(-1,-1),(-1,-1),
        (-1,-1),(-1,-1),(-1,-1),(-1,-1), (-1,-1),(-1,-1),(-1,-1),(-1,-1),
 
    // 1792	0000_0001_000
        (11,1792), (11,1792), (11,1792), (11,1792),      
    // 1984	0000_0001_0010
        (12,1984),(12,1984),
    // 2048	0000_0001_0011
        (12,2048),(12,2048),
    // 2112	0000_0001_0100
        (12,2112),(12,2112),
    // 2176	0000_0001_0101
        (12,2176),(12,2176),
    // 2240	0000_0001_0110
        (12,2240),(12,2240),
    // 2304	0000_0001_0111
        (12,2304),(12,2304),

    // 1856	0000_0001_100
        (11,1856),(11,1856),(11,1856),(11,1856),
    // 1920	0000_0001_101
        (11,1920),(11,1920),(11,1920),(11,1920),

    // 2368	0000_0001_1100
        (12,2368),(12,2368),
    // 2432	0000_0001_1101
        (12,2432),(12,2432),
    // 2496	0000_0001_1110
        (12,2496),(12,2496),
    // 2560	0000_0001_1111
        (12,2560),(12,2560),
    // 0000_0010_0
    // 18	    0000_0010_00
        (10,18),(10,18),(10,18),(10,18), (10,18),(10,18),(10,18),(10,18),
    // 52	    0000_0010_0100
        (12,52),(12,52),
    // 640	    0000_0010_0101_0
        (13,640),
    // 704	    0000_0010_0101_1
        (13,704),
    // 768	    0000_0010_0110_0
        (13,768),
    // 832	    0000_0010_0110_1
        (13,832),
    // 55	    0000_0010_0111
        (12,55),(12,55),
    // 0000_0010_1
    // 56	    0000_0010_1000
        (12,56),(12,56),
    // 1280	    0000_0010_1001_0
        (13,1280),
    // 1344	    0000_0010_1001_1
        (13,1344),
    // 1408	    0000_0010_1010_0
        (13,1408),
    // 1472	    0000_0010_1010_1
        (13,1472),
    // 59	    0000_0010_1011
        (12,59),(12,59),
    // 60	    0000_0010_1100
        (12,60),(12,60),
    // 1536	    0000_0010_1101_0
        (13,1536),
    // 1600	    0000_0010_1101_1
        (13,1600),
    // 24	    0000_0010_111
        (11,24),(11,24),(11,24),(11,24),
    // 25	    0000_0011_000
        (11,25),(11,25),(11,25),(11,25),
    // 1664	0000_0011_0010_0
        (13,1664),
    // 1728	0000_0011_0010_1
        (13,1728),
    // 320	    0000_0011_0011
        (12,320),(12,320),
    // 384	    0000_0011_0100
        (12,384),(12,384),
    // 448	    0000_0011_0101
        (12,448),(12,448),
    // 512	    0000_0011_0110_0
        (13,512),
    // 576	    0000_0011_0110_1
        (13,576),
    // 53	    0000_0011_0111
        (12,53),(12,53),
    // 54	    0000_0011_1000
        (12,54),(12,54),
    // 896 	0000_0011_1001_0
        (13,896),
    // 960	0000_0011_1001_1
        (13,960),
    // 1024	0000_0011_1010_0
        (13,1024),
    // 1088	0000_0011_1010_1
        (13,1088),
    // 1152	0000_0011_1011_0
        (13,1152),
    // 1216	0000_0011_1011_1
        (13,1216),
    // 64	0000_0011_11
        (10,64),(10,64),(10,64),(10,64), (10,64),(10,64),(10,64),(10,64),
    // 13  	0000_0100 -dummy 32
        (8,13),(8,13),(8,13),(8,13), (8,13),(8,13),(8,13),(8,13),
        (8,13),(8,13),(8,13),(8,13), (8,13),(8,13),(8,13),(8,13),
        (8,13),(8,13),(8,13),(8,13), (8,13),(8,13),(8,13),(8,13),
        (8,13),(8,13),(8,13),(8,13), (8,13),(8,13),(8,13),(8,13),
    // 0000_0101
    // 23	    0000_0101_000
        (11,23),(11,23),(11,23),(11,23),
    // 50	    0000_0101_0010
        (12,50),(12,50),
    // 51	    0000_0101_0011
        (12,51),(12,51),
    // 44	    0000_0101_0100
        (12,44),(12,44),
    // 45	    0000_0101_0101
        (12,45),(12,45),
    // 46	    0000_0101_0110
        (12,46),(12,46),
    // 47	    0000_0101_0111
        (12,47),(12,47),
    // 57	    0000_0101_1000
        (12,57),(12,57),
    // 58	    0000_0101_1001
        (12,58),(12,58),
    // 61   	0000_0101_1010
        (12,61),(12,61),
    // 256	    0000_0101_1011
        (12,256),(12,256),
    // 16  	0000_0101_11
        (10,16),(10,16),(10,16),(10,16), (10,16),(10,16),(10,16),(10,16),
    // 0000_0110
    // 17	    0000_0110_00
        (10,17),(10,17),(10,17),(10,17), (10,17),(10,17),(10,17),(10,17),
    // 48  	    0000_0110_0100
        (12,48),(12,48),
    // 49  	    0000_0110_0101
        (12,49),(12,49),
    // 62  	    0000_0110_0110
        (12,62),(12,62),
    // 63	    0000_0110_0111
        (12,63),(12,63),
    // 30       0000_0110_1000
        (12,30),(12,30),
    // 31	    0000_0110_1001
        (12,31),(12,31),
    // 32	    0000_0110_1010
        (12,32),(12,32),
    // 33	    0000_0110_1011
        (12,33),(12,33),
    // 40	    0000_0110_1100
        (12,40),(12,40),
    // 41	    0000_0110_1101
        (12,41),(12,41),
    // 22	    0000_0110_111
        (11,22),(11,22),(11,22),(11,22),
    // 14	    0000_0111 
        (8,14),(8,14),(8,14),(8,14), (8,14),(8,14),(8,14),(8,14),
        (8,14),(8,14),(8,14),(8,14), (8,14),(8,14),(8,14),(8,14),
        (8,14),(8,14),(8,14),(8,14), (8,14),(8,14),(8,14),(8,14),
        (8,14),(8,14),(8,14),(8,14), (8,14),(8,14),(8,14),(8,14),

    //    10	    0000_100 
        (7,10),(7,10),(7,10),(7,10), (7,10),(7,10),(7,10),(7,10),
        (7,10),(7,10),(7,10),(7,10), (7,10),(7,10),(7,10),(7,10),
        (7,10),(7,10),(7,10),(7,10), (7,10),(7,10),(7,10),(7,10),
        (7,10),(7,10),(7,10),(7,10), (7,10),(7,10),(7,10),(7,10),
        (7,10),(7,10),(7,10),(7,10), (7,10),(7,10),(7,10),(7,10),
        (7,10),(7,10),(7,10),(7,10), (7,10),(7,10),(7,10),(7,10),
        (7,10),(7,10),(7,10),(7,10), (7,10),(7,10),(7,10),(7,10),
        (7,10),(7,10),(7,10),(7,10), (7,10),(7,10),(7,10),(7,10),

    //    11	    0000_101 - dummy
        (7,11),(7,11),(7,11),(7,11), (7,11),(7,11),(7,11),(7,11),
        (7,11),(7,11),(7,11),(7,11), (7,11),(7,11),(7,11),(7,11),
        (7,11),(7,11),(7,11),(7,11), (7,11),(7,11),(7,11),(7,11),
        (7,11),(7,11),(7,11),(7,11), (7,11),(7,11),(7,11),(7,11),
        (7,11),(7,11),(7,11),(7,11), (7,11),(7,11),(7,11),(7,11),
        (7,11),(7,11),(7,11),(7,11), (7,11),(7,11),(7,11),(7,11),
        (7,11),(7,11),(7,11),(7,11), (7,11),(7,11),(7,11),(7,11),
        (7,11),(7,11),(7,11),(7,11), (7,11),(7,11),(7,11),(7,11),

    // 00000_1100
    // 15  	    0000_1100_0   
        (9,15),(9,15),(9,15),(9,15), (9,15),(9,15),(9,15),(9,15),
        (9,15),(9,15),(9,15),(9,15), (9,15),(9,15),(9,15),(9,15),
    // 128	    0000_1100_1000
        (12,128),(12,128),
    // 192	    0000_1100_1001
        (12,192),(12,192),
    // 26	    0000_1100_1010
        (12,26),(12,26),
    // 27	    0000_1100_1011
        (12,27),(12,27),
    // 28	    0000_1100_1100
        (12,28),(12,28),
    // 29	    0000_1100_1101
        (12,29),(12,29),
    // 19	    0000_1100_111
        (11,19),(11,19),(11,19),(11,19),

    // 0000_1101
    // 20	    0000_1101_000    
        (11,20),(11,20),(11,20),(11,20),
    // 34	    0000_1101_0010
        (12,34),(12,34),
    // 35	    0000_1101_0011
        (12,35),(12,35),
    // 36	    0000_1101_0100
        (12,36),(12,36),
    // 37	    0000_1101_0101
        (12,37),(12,37),
    // 38  	    0000_1101_0110
        (12,38),(12,38),
    // 39  	    0000_1101_0111
        (12,39),(12,39),
    // 21	    0000_1101_100
        (11,21),(11,21),(11,21),(11,21),
    // 42	    0000_1101_1010
        (12,42),(12,42),
    // 43  	    0000_1101_1011
        (12,43),(12,43),
    // 0	    0000_1101_11
        (10,0),(10,0),(10,0),(10,0), (10,0),(10,0),(10,0),(10,0),
    // 12  	0000_111
        (7,12),(7,12),(7,12),(7,12), (7,12),(7,12),(7,12),(7,12),
        (7,12),(7,12),(7,12),(7,12), (7,12),(7,12),(7,12),(7,12),
        (7,12),(7,12),(7,12),(7,12), (7,12),(7,12),(7,12),(7,12),
        (7,12),(7,12),(7,12),(7,12), (7,12),(7,12),(7,12),(7,12),
        (7,12),(7,12),(7,12),(7,12), (7,12),(7,12),(7,12),(7,12),
        (7,12),(7,12),(7,12),(7,12), (7,12),(7,12),(7,12),(7,12),
        (7,12),(7,12),(7,12),(7,12), (7,12),(7,12),(7,12),(7,12),
        (7,12),(7,12),(7,12),(7,12), (7,12),(7,12),(7,12),(7,12),
    ];



    let matrix :[(i32,i32);64] = [
    (-1,0b00),
    (-1,0b01),
    (-1,0b10),
    (-1,0b11),

    // 0001
    // 9	000100
    (6,9),
    // 8	000101
    (6,8),

    // 7	00011
    (5,7),(5,7),

    // 6	0010
    (4,6),(4,6),(4,6),(4,6),

    // 5	0011
    (4,5),(4,5),(4,5),(4,5), 
    // 1	010
    (3,1),(3,1),(3,1),(3,1), (3,1),(3,1),(3,1),(3,1),

    // 4	011
    (3,4),(3,4),(3,4),(3,4), (3,4),(3,4),(3,4),(3,4),
 
    // 3	10
    (2,3),(2,3),(2,3),(2,3), (2,3),(2,3),(2,3),(2,3), (2,3),(2,3),(2,3),(2,3), (2,3),(2,3),(2,3),(2,3),

    // 2    11
    (2,2),(2,2),(2,2),(2,2), (2,2),(2,2),(2,2),(2,2), (2,2),(2,2),(2,2),(2,2), (2,2),(2,2),(2,2),(2,2),
    ];

    HuffmanTree {
        working_bits,
        max_bits,
        append_bits,
        matrix: matrix.to_vec(),
        append: append.to_vec(),
    }
}

